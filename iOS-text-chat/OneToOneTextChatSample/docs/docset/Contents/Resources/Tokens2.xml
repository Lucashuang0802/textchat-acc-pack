<?xml version="1.0" encoding="UTF-8"?>
<Tokens version="1.0">
	<File path="Classes/TextChatView.html">
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/cl/TextChatView</TokenIdentifier>
			<Abstract type="html"></Abstract>
			<DeclaredIn>TextChatView.h</DeclaredIn>
            
			
			<NodeRef refid="2"/>
		</Token>
		
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/clm/TextChatView/setOpenTokApiKey:sessionId:token:</TokenIdentifier>
			<Abstract type="html">Add the configuration detail to your app.</Abstract>
			<DeclaredIn>TextChatView.h</DeclaredIn>
			
			<Declaration>+ (void)setOpenTokApiKey:(NSString *)apiKey sessionId:(NSString *)sessionId token:(NSString *)token</Declaration>
			<Parameters>
				<Parameter>
					<Name>apiKey</Name>
					<Abstract type="html">Your OpenTok API key.</Abstract>
				</Parameter><Parameter>
					<Name>sessionId</Name>
					<Abstract type="html">The session ID of this instance.</Abstract>
				</Parameter><Parameter>
					<Name>token</Name>
					<Abstract type="html">The token generated for this connection.</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/setOpenTokApiKey:sessionId:token:</Anchor>
            <NodeRef refid="2"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/TextChatView/setDelegate:</TokenIdentifier>
			<Abstract type="html">The object that acts as the delegate of the text chat view.</Abstract>
			<DeclaredIn>TextChatView.h</DeclaredIn>
			
			<Declaration>@property (weak, nonatomic) id&lt;TextChatViewDelegate&gt; delegate</Declaration>
			
			
			<Anchor>//api/name/delegate</Anchor>
            <NodeRef refid="2"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/TextChatView/delegate</TokenIdentifier>
			<Abstract type="html">The object that acts as the delegate of the text chat view.</Abstract>
			<DeclaredIn>TextChatView.h</DeclaredIn>
			
			<Declaration>@property (weak, nonatomic) id&lt;TextChatViewDelegate&gt; delegate</Declaration>
			
			
			<Anchor>//api/name/delegate</Anchor>
            <NodeRef refid="2"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/TextChatView/delegate</TokenIdentifier>
			<Abstract type="html">The object that acts as the delegate of the text chat view.</Abstract>
			<DeclaredIn>TextChatView.h</DeclaredIn>
			
			<Declaration>@property (weak, nonatomic) id&lt;TextChatViewDelegate&gt; delegate</Declaration>
			
			
			<Anchor>//api/name/delegate</Anchor>
            <NodeRef refid="2"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/TextChatView/setShow:</TokenIdentifier>
			<Abstract type="html">A boolean value that indicates whether the text chat view is shown or hidden</Abstract>
			<DeclaredIn>TextChatView.h</DeclaredIn>
			
			<Declaration>@property (readonly, nonatomic, getter=isShown) BOOL show</Declaration>
			
			
			<Anchor>//api/name/show</Anchor>
            <NodeRef refid="2"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/TextChatView/isShown</TokenIdentifier>
			<Abstract type="html">A boolean value that indicates whether the text chat view is shown or hidden</Abstract>
			<DeclaredIn>TextChatView.h</DeclaredIn>
			
			<Declaration>@property (readonly, nonatomic, getter=isShown) BOOL show</Declaration>
			
			
			<Anchor>//api/name/show</Anchor>
            <NodeRef refid="2"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/TextChatView/show</TokenIdentifier>
			<Abstract type="html">A boolean value that indicates whether the text chat view is shown or hidden</Abstract>
			<DeclaredIn>TextChatView.h</DeclaredIn>
			
			<Declaration>@property (readonly, nonatomic, getter=isShown) BOOL show</Declaration>
			
			
			<Anchor>//api/name/show</Anchor>
            <NodeRef refid="2"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/TextChatView/setCustomizator:</TokenIdentifier>
			<Abstract type="html">The object that manages changeable users interfaces</Abstract>
			<DeclaredIn>TextChatView.h</DeclaredIn>
			
			<Declaration>@property (readonly, nonatomic) TextChatUICustomizator *customizator</Declaration>
			
			
			<Anchor>//api/name/customizator</Anchor>
            <NodeRef refid="2"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/TextChatView/customizator</TokenIdentifier>
			<Abstract type="html">The object that manages changeable users interfaces</Abstract>
			<DeclaredIn>TextChatView.h</DeclaredIn>
			
			<Declaration>@property (readonly, nonatomic) TextChatUICustomizator *customizator</Declaration>
			
			
			<Anchor>//api/name/customizator</Anchor>
            <NodeRef refid="2"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/TextChatView/customizator</TokenIdentifier>
			<Abstract type="html">The object that manages changeable users interfaces</Abstract>
			<DeclaredIn>TextChatView.h</DeclaredIn>
			
			<Declaration>@property (readonly, nonatomic) TextChatUICustomizator *customizator</Declaration>
			
			
			<Anchor>//api/name/customizator</Anchor>
            <NodeRef refid="2"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/clm/TextChatView/textChatView</TokenIdentifier>
			<Abstract type="html">Returns an initialized text chat view object</Abstract>
			<DeclaredIn>TextChatView.h</DeclaredIn>
			
			<Declaration>+ (instancetype)textChatView</Declaration>
			
			<ReturnValue><Abstract type="html">Returns an initialized text chat view object</Abstract></ReturnValue>
			<Anchor>//api/name/textChatView</Anchor>
            <NodeRef refid="2"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/clm/TextChatView/textChatViewWithBottomView:</TokenIdentifier>
			<Abstract type="html">Returns an initialized text chat view object whose bottom attached to a given</Abstract>
			<DeclaredIn>TextChatView.h</DeclaredIn>
			
			<Declaration>+ (instancetype)textChatViewWithBottomView:(UIView *)bottomView</Declaration>
			<Parameters>
				<Parameter>
					<Name>bottomView</Name>
					<Abstract type="html">This is the view the TextChat view is going to attach on top</Abstract>
				</Parameter>
			</Parameters>
			<ReturnValue><Abstract type="html">Returns an initialized text chat view object</Abstract></ReturnValue>
			<Anchor>//api/name/textChatViewWithBottomView:</Anchor>
            <NodeRef refid="2"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/TextChatView/connect</TokenIdentifier>
			<Abstract type="html">Establishes a text chat connection</Abstract>
			<DeclaredIn>TextChatView.h</DeclaredIn>
			
			<Declaration>- (void)connect</Declaration>
			
			
			<Anchor>//api/name/connect</Anchor>
            <NodeRef refid="2"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/TextChatView/connectWithHandler:</TokenIdentifier>
			<Abstract type="html">Establishes a text chat connection with completion</Abstract>
			<DeclaredIn>TextChatView.h</DeclaredIn>
			
			<Declaration>- (void)connectWithHandler:(TextChatViewEventBlock)handler</Declaration>
			<Parameters>
				<Parameter>
					<Name>handler</Name>
					<Abstract type="html">NS_ENUM for the different event signals</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/connectWithHandler:</Anchor>
            <NodeRef refid="2"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/TextChatView/disconnect</TokenIdentifier>
			<Abstract type="html">Stops a text chat connection</Abstract>
			<DeclaredIn>TextChatView.h</DeclaredIn>
			
			<Declaration>- (void)disconnect</Declaration>
			
			
			<Anchor>//api/name/disconnect</Anchor>
            <NodeRef refid="2"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/TextChatView/show</TokenIdentifier>
			<Abstract type="html">Shows the text chat view</Abstract>
			<DeclaredIn>TextChatView.h</DeclaredIn>
			
			<Declaration>- (void)show</Declaration>
			
			
			<Anchor>//api/name/show</Anchor>
            <NodeRef refid="2"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/TextChatView/dismiss</TokenIdentifier>
			<Abstract type="html">Hides the text chat view</Abstract>
			<DeclaredIn>TextChatView.h</DeclaredIn>
			
			<Declaration>- (void)dismiss</Declaration>
			
			
			<Anchor>//api/name/dismiss</Anchor>
            <NodeRef refid="2"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/TextChatView/setAlias:</TokenIdentifier>
			<Abstract type="html">Assign an alias name to the sender</Abstract>
			<DeclaredIn>TextChatView.h</DeclaredIn>
			
			<Declaration>- (void)setAlias:(NSString *)alias</Declaration>
			<Parameters>
				<Parameter>
					<Name>alias</Name>
					<Abstract type="html">String with the alias of the sender</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/setAlias:</Anchor>
            <NodeRef refid="2"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/TextChatView/setMaximumTextMessageLength:</TokenIdentifier>
			<Abstract type="html">Assign a maximum length of characters each message contains</Abstract>
			<DeclaredIn>TextChatView.h</DeclaredIn>
			
			<Declaration>- (void)setMaximumTextMessageLength:(NSUInteger)length</Declaration>
			<Parameters>
				<Parameter>
					<Name>length</Name>
					<Abstract type="html">max number of characters allowed by message</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/setMaximumTextMessageLength:</Anchor>
            <NodeRef refid="2"/>
		</Token>
		
        
        
	</File>
</Tokens>